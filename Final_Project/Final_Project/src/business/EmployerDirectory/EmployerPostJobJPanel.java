/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package business.EmployerDirectory;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
/**
 *
 * @author Amisha
 */
public class EmployerPostJobJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunicationJPanel
     */
    private String username;
    public EmployerPostJobJPanel(String username) {
        initComponents();
        this.username=username;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtJobID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtJobType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtJobCategory = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtJobDescription = new javax.swing.JTextArea();
        btnPostJob = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Post A New Job Here");

        jLabel2.setText("JobID");

        jLabel3.setText("Job Type");

        txtJobCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJobCategoryActionPerformed(evt);
            }
        });

        jLabel4.setText("Job Category");

        jLabel5.setText("Job Description");

        txtJobDescription.setColumns(20);
        txtJobDescription.setRows(5);
        jScrollPane1.setViewportView(txtJobDescription);

        btnPostJob.setBackground(new java.awt.Color(51, 51, 255));
        btnPostJob.setFont(new java.awt.Font("Yu Gothic", 1, 12)); // NOI18N
        btnPostJob.setForeground(new java.awt.Color(255, 255, 255));
        btnPostJob.setText("Post");
        btnPostJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtJobID)
                                    .addComponent(txtJobType)
                                    .addComponent(txtJobCategory)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addComponent(btnPostJob, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)))))
                .addContainerGap(311, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJobID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtJobType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJobCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPostJob, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPostJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostJobActionPerformed
        // TODO add your handling code here:
        postJob();
    }//GEN-LAST:event_btnPostJobActionPerformed

    private void txtJobCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJobCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobCategoryActionPerformed

    private void postJob() {
    int employerID = fetchEmployerID(username);
    String jobType = txtJobType.getText();
    String jobCategory = txtJobCategory.getText();
    String jobDescription = txtJobDescription.getText();

    // Check if a similar job has already been posted
    if (isJobAlreadyPosted(employerID, jobType, jobCategory, jobDescription)) {
        // Display a message indicating that a similar job has already been posted
        JOptionPane.showMessageDialog(this, "Similar job already posted!", "Job Posting Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // If not, proceed with posting the job
        String insertQuery = "INSERT INTO jobs (EmployerID, JobType, JobCategory, JobDescription) VALUES (?, ?, ?, ?)";
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/university", "root", "Mysql@1");
             PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
            preparedStatement.setInt(1, employerID);
            preparedStatement.setString(2, jobType);
            preparedStatement.setString(3, jobCategory);
            preparedStatement.setString(4, jobDescription);
            preparedStatement.executeUpdate();
            
            // Display a message indicating successful job posting
            JOptionPane.showMessageDialog(this, "Job posted successfully!", "Job Posting Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

private boolean isJobAlreadyPosted(int employerID, String jobType, String jobCategory, String jobDescription) {
    boolean jobAlreadyPosted = false;
    String selectQuery = "SELECT * FROM jobs WHERE EmployerID = ? AND JobType = ? AND JobCategory = ? AND JobDescription = ?";
    try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/university", "root", "Mysql@1");
         PreparedStatement preparedStatement = connection.prepareStatement(selectQuery)) {
        preparedStatement.setInt(1, employerID);
        preparedStatement.setString(2, jobType);
        preparedStatement.setString(3, jobCategory);
        preparedStatement.setString(4, jobDescription);
        ResultSet resultSet = preparedStatement.executeQuery();
        if (resultSet.next()) {
            jobAlreadyPosted = true;
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return jobAlreadyPosted;
}

    
    private int fetchEmployerID(String username) {
        int employerID = 0;
        String selectQuery = "SELECT EmployerID FROM employers WHERE Username = ?";
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/university", "root", "Mysql@1");
             PreparedStatement preparedStatement = connection.prepareStatement(selectQuery)) {
            preparedStatement.setString(1, username);
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                employerID = resultSet.getInt("EmployerID");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return employerID;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPostJob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtJobCategory;
    private javax.swing.JTextArea txtJobDescription;
    private javax.swing.JTextField txtJobID;
    private javax.swing.JTextField txtJobType;
    // End of variables declaration//GEN-END:variables
}
