/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package business.StudentDirectory;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.DatabaseConnection;
/**
 *
 * @author Atharv Joshi
 */
public class StuViewJobsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StuViewJobsJPanel
     */
    private String username;
    public StuViewJobsJPanel(String username) {
        initComponents();
        this.username = username;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblalljobs = new javax.swing.JTable();
        txtJobID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnapply = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View all available jobs");

        tblalljobs.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        tblalljobs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "JobID", "EmployerID", "JobType", "JobCategory", "JobDescription", "ApplicationDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblalljobs);

        txtJobID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJobIDActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Apply For Job with JOb ID:");

        btnapply.setBackground(new java.awt.Color(51, 51, 255));
        btnapply.setFont(new java.awt.Font("Yu Gothic", 1, 12)); // NOI18N
        btnapply.setForeground(new java.awt.Color(255, 255, 255));
        btnapply.setText("APPLY");
        btnapply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(txtJobID, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(btnapply, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJobID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btnapply, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean hasStudentApplied(int jobID) {
        try {
            Connection connection = DatabaseConnection.getConnection();
            String query = "SELECT * FROM job_applications WHERE JobID = ? AND StudentID = (SELECT StudentID FROM students WHERE Username = ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setInt(1, jobID);
                preparedStatement.setString(2, username);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    return resultSet.next();
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
         private boolean applyForJob(int jobID) {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/university", "root", "Mysql@1");
 
            String query = "INSERT INTO job_applications (JobID, StudentID, Applied) VALUES (?, (SELECT StudentID FROM students WHERE Username = ?), 1)";
            try (PreparedStatement preparedStatement = con.prepareStatement(query)) {
                preparedStatement.setInt(1, jobID);
                preparedStatement.setString(2, username);
                return preparedStatement.executeUpdate() > 0;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
    }
    private void txtJobIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJobIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobIDActionPerformed

    private void btnapplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapplyActionPerformed
        // TODO add your handling code here:
            int jobID = Integer.parseInt(txtJobID.getText());
        if (hasStudentApplied(jobID)) {
            JOptionPane.showMessageDialog(this, "You have already applied for this job.");
        } else {
            if (applyForJob(jobID)) {
                JOptionPane.showMessageDialog(this, "Application submitted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to submit application. Please try again.");
            }
        }
    }//GEN-LAST:event_btnapplyActionPerformed
    private void populateTable() {
 
        try (Connection connection=DatabaseConnection.getConnection()) {
            String sql = "SELECT * FROM jobs";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet resultSet = statement.executeQuery();
 
            DefaultTableModel model = (DefaultTableModel) tblalljobs.getModel();
            model.setRowCount(0); // Clear existing rows from the table
 
            while (resultSet.next()) {
                int jobID = resultSet.getInt("JobID");
                int employerID = resultSet.getInt("EmployerID");
                String jobType = resultSet.getString("JobType");
                String jobCategory = resultSet.getString("JobCategory");
                String jobDescription = resultSet.getString("JobDescription");
                String applicationDate = resultSet.getTimestamp("ApplicationDate").toString();
 
                model.addRow(new Object[]{jobID, employerID, jobType, jobCategory, jobDescription, applicationDate});
            }
 
        } catch (SQLException e) {
            e.printStackTrace(); // Handle potential errors here
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnapply;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblalljobs;
    private javax.swing.JTextField txtJobID;
    // End of variables declaration//GEN-END:variables

  

    }
