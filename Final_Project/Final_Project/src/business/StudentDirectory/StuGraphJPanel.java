/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package business.StudentDirectory;
import java.awt.FlowLayout;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import ui.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;

/**
 *
 * @author Atharv Joshi
 */
public class StuGraphJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StuGraphJPanel
     */
    public StuGraphJPanel() {
        initComponents();
        createPieChart();
    }
    
    private DefaultPieDataset createDataset() {
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            Connection connection = DatabaseConnection.getConnection();
            String query = "SELECT Nationality, COUNT(*) as Count FROM students GROUP BY Nationality";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String nationality = resultSet.getString("Nationality");
                int count = resultSet.getInt("Count");
                dataset.setValue(nationality, count);
            }

            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return dataset;
    }
private JFreeChart createChart(DefaultPieDataset dataset) {
    JFreeChart chart = ChartFactory.createPieChart(
            "Nationalities of Students",
            dataset,
            true,
            true,
            false
    );

    PiePlot plot = (PiePlot) chart.getPlot();
    PieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator("{0}: {1} ({2})", new java.text.DecimalFormat("0"), new java.text.DecimalFormat("0%"));
    plot.setLabelGenerator(labelGenerator);

    return chart;
}
    
    
    private void createPieChart() {
    setLayout(new FlowLayout()); // or setLayout(new GridLayout(1, 1));
    setPreferredSize(new java.awt.Dimension(500, 400));

    DefaultPieDataset dataset = createDataset();
    JFreeChart chart = createChart(dataset);

    ChartPanel chartPanel = new ChartPanel(chart);
    chartPanel.setPreferredSize(new java.awt.Dimension(500, 400));
    
    add(chartPanel);

    revalidate();
    repaint();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 946, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
